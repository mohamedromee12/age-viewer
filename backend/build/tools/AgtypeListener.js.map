{"version":3,"file":"AgtypeListener.js","names":["_antlr","_interopRequireDefault","require","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","AgtypeListener","_antlr4$tree$ParseTre","_inherits2","_super","_classCallCheck2","_createClass2","key","value","enterAgType","ctx","exitAgType","enterAgValue","exitAgValue","enterStringValue","exitStringValue","enterIntegerValue","exitIntegerValue","enterFloatValue","exitFloatValue","enterTrueBoolean","exitTrueBoolean","enterFalseBoolean","exitFalseBoolean","enterNullValue","exitNullValue","enterObjectValue","exitObjectValue","enterArrayValue","exitArrayValue","enterObj","exitObj","enterPair","exitPair","enterArray","exitArray","enterTypeAnnotation","exitTypeAnnotation","enterFloatLiteral","exitFloatLiteral","antlr4","tree","ParseTreeListener","exports"],"sources":["../../src/tools/AgtypeListener.js"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n// Generated from src/tools/Agtype.g4 by ANTLR 4.9.2\n// jshint ignore: start\nimport antlr4 from 'antlr4';\n\n// This class defines a complete listener for a parse tree produced by AgtypeParser.\nexport default class AgtypeListener extends antlr4.tree.ParseTreeListener {\n\n    // Enter a parse tree produced by AgtypeParser#agType.\n    enterAgType(ctx) {\n    }\n\n    // Exit a parse tree produced by AgtypeParser#agType.\n    exitAgType(ctx) {\n    }\n\n\n    // Enter a parse tree produced by AgtypeParser#agValue.\n    enterAgValue(ctx) {\n    }\n\n    // Exit a parse tree produced by AgtypeParser#agValue.\n    exitAgValue(ctx) {\n    }\n\n\n    // Enter a parse tree produced by AgtypeParser#StringValue.\n    enterStringValue(ctx) {\n    }\n\n    // Exit a parse tree produced by AgtypeParser#StringValue.\n    exitStringValue(ctx) {\n    }\n\n\n    // Enter a parse tree produced by AgtypeParser#IntegerValue.\n    enterIntegerValue(ctx) {\n    }\n\n    // Exit a parse tree produced by AgtypeParser#IntegerValue.\n    exitIntegerValue(ctx) {\n    }\n\n\n    // Enter a parse tree produced by AgtypeParser#FloatValue.\n    enterFloatValue(ctx) {\n    }\n\n    // Exit a parse tree produced by AgtypeParser#FloatValue.\n    exitFloatValue(ctx) {\n    }\n\n\n    // Enter a parse tree produced by AgtypeParser#TrueBoolean.\n    enterTrueBoolean(ctx) {\n    }\n\n    // Exit a parse tree produced by AgtypeParser#TrueBoolean.\n    exitTrueBoolean(ctx) {\n    }\n\n\n    // Enter a parse tree produced by AgtypeParser#FalseBoolean.\n    enterFalseBoolean(ctx) {\n    }\n\n    // Exit a parse tree produced by AgtypeParser#FalseBoolean.\n    exitFalseBoolean(ctx) {\n    }\n\n\n    // Enter a parse tree produced by AgtypeParser#NullValue.\n    enterNullValue(ctx) {\n    }\n\n    // Exit a parse tree produced by AgtypeParser#NullValue.\n    exitNullValue(ctx) {\n    }\n\n\n    // Enter a parse tree produced by AgtypeParser#ObjectValue.\n    enterObjectValue(ctx) {\n    }\n\n    // Exit a parse tree produced by AgtypeParser#ObjectValue.\n    exitObjectValue(ctx) {\n    }\n\n\n    // Enter a parse tree produced by AgtypeParser#ArrayValue.\n    enterArrayValue(ctx) {\n    }\n\n    // Exit a parse tree produced by AgtypeParser#ArrayValue.\n    exitArrayValue(ctx) {\n    }\n\n\n    // Enter a parse tree produced by AgtypeParser#obj.\n    enterObj(ctx) {\n    }\n\n    // Exit a parse tree produced by AgtypeParser#obj.\n    exitObj(ctx) {\n    }\n\n\n    // Enter a parse tree produced by AgtypeParser#pair.\n    enterPair(ctx) {\n    }\n\n    // Exit a parse tree produced by AgtypeParser#pair.\n    exitPair(ctx) {\n    }\n\n\n    // Enter a parse tree produced by AgtypeParser#array.\n    enterArray(ctx) {\n    }\n\n    // Exit a parse tree produced by AgtypeParser#array.\n    exitArray(ctx) {\n    }\n\n\n    // Enter a parse tree produced by AgtypeParser#typeAnnotation.\n    enterTypeAnnotation(ctx) {\n    }\n\n    // Exit a parse tree produced by AgtypeParser#typeAnnotation.\n    exitTypeAnnotation(ctx) {\n    }\n\n\n    // Enter a parse tree produced by AgtypeParser#floatLiteral.\n    enterFloatLiteral(ctx) {\n    }\n\n    // Exit a parse tree produced by AgtypeParser#floatLiteral.\n    exitFloatLiteral(ctx) {\n    }\n\n}\n"],"mappings":"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"}