{"version":3,"file":"JsonBuilder.js","names":["stringWrap","valstr","flavor","JSON","stringify","JsonStringify","record","ageJsonStr","isFirst","_i","_Object$entries","Object","entries","length","_Object$entries$_i","_slicedToArray2","key","value","valueWrapped","concat","createVertex","_x","_x2","_x3","_x4","_x5","_createVertex","apply","arguments","_asyncToGenerator2","_regenerator","mark","_callee","client","graphPathStr","label","createQ","wrap","_callee$","_context","prev","next","abrupt","AGECreateVertex","Error","stop","_x6","_x7","_x8","_AGECreateVertex","_callee2","_callee2$","_context2","query","createEdge","_x9","_x10","_x11","_x12","_x13","_x14","_x15","_x16","_x17","_createEdge","_callee3","edgeStartLabel","edgeEndLabel","startNodeName","endNodeName","_callee3$","_context3","AGECreateEdge","_x18","_x19","_x20","_AGECreateEdge","_callee4","_callee4$","_context4"],"sources":["../../src/util/JsonBuilder.js"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport function stringWrap(valstr, flavor) {\n    return JSON.stringify(valstr);\n}\n\nexport function JsonStringify(flavor, record) {\n    let ageJsonStr = '{';\n    let isFirst = true;\n    for (const [key, value] of Object.entries(record)) {\n        if (!isFirst) {\n            ageJsonStr = ageJsonStr + ',';\n        }\n        let valueWrapped = stringWrap(value, flavor);\n        ageJsonStr = ageJsonStr + `${key}:${valueWrapped}`;\n        isFirst = false;\n    }\n    ageJsonStr = ageJsonStr + '}';\n    return ageJsonStr;\n}\n\nexport async function createVertex(client, graphPathStr, label, record, flavor) {\n    const createQ = `CREATE (n:${label} ${JsonStringify(flavor, record)})`;\n    if (flavor === 'AGE') {\n        return AGECreateVertex(client, graphPathStr, createQ);\n    } else {\n        throw new Error(`Unknown flavor ${flavor}`)\n    }\n}\n\nasync function AGECreateVertex(client, graphPathStr, createQ) {\n    await client.query(\n        `select *\n         from cypher('${graphPathStr}', $$ ${createQ} $$) as (a agtype)`);\n}\n\nexport async function createEdge(client, label, record, graphPathStr, edgeStartLabel, edgeEndLabel, startNodeName, endNodeName, flavor) {\n    const createQ = `CREATE (:${edgeStartLabel} {name: ${stringWrap(startNodeName, flavor)}})-[n:${label} ${JsonStringify(flavor, record)}]->(:${edgeEndLabel} {name: ${stringWrap(endNodeName, flavor)}})`;\n    if (flavor === 'AGE') {\n        return AGECreateEdge(client, graphPathStr, createQ);\n    } else {\n        throw new Error(`Unknown flavor ${flavor}`)\n    }\n}\n\nasync function AGECreateEdge(client, graphPathStr, createQ) {\n    await client.query(\n        `select *\n         from cypher('${graphPathStr}', $$ ${createQ} $$) as (a agtype)`);\n}\n"],"mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,SAASA,UAAUA,CAACC,MAAM,EAAEC,MAAM,EAAE;EACvC,OAAOC,IAAI,CAACC,SAAS,CAACH,MAAM,CAAC;AACjC;AAEO,SAASI,aAAaA,CAACH,MAAM,EAAEI,MAAM,EAAE;EAC1C,IAAIC,UAAU,GAAG,GAAG;EACpB,IAAIC,OAAO,GAAG,IAAI;EAClB,SAAAC,EAAA,MAAAC,eAAA,GAA2BC,MAAM,CAACC,OAAO,CAACN,MAAM,CAAC,EAAAG,EAAA,GAAAC,eAAA,CAAAG,MAAA,EAAAJ,EAAA,IAAE;IAA9C,IAAAK,kBAAA,OAAAC,eAAA,aAAAL,eAAA,CAAAD,EAAA;MAAOO,GAAG,GAAAF,kBAAA;MAAEG,KAAK,GAAAH,kBAAA;IAClB,IAAI,CAACN,OAAO,EAAE;MACVD,UAAU,GAAGA,UAAU,GAAG,GAAG;IACjC;IACA,IAAIW,YAAY,GAAGlB,UAAU,CAACiB,KAAK,EAAEf,MAAM,CAAC;IAC5CK,UAAU,GAAGA,UAAU,MAAAY,MAAA,CAAMH,GAAG,OAAAG,MAAA,CAAID,YAAY,CAAE;IAClDV,OAAO,GAAG,KAAK;EACnB;EACAD,UAAU,GAAGA,UAAU,GAAG,GAAG;EAC7B,OAAOA,UAAU;AACrB;AAAC,SAEqBa,YAAYA,CAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,aAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,cAAA;EAAAA,aAAA,OAAAG,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAA3B,SAAAC,QAA4BC,MAAM,EAAEC,YAAY,EAAEC,KAAK,EAAE7B,MAAM,EAAEJ,MAAM;IAAA,IAAAkC,OAAA;IAAA,OAAAN,YAAA,YAAAO,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UACpEL,OAAO,gBAAAjB,MAAA,CAAgBgB,KAAK,OAAAhB,MAAA,CAAId,aAAa,CAACH,MAAM,EAAEI,MAAM,CAAC;UAAA,MAC/DJ,MAAM,KAAK,KAAK;YAAAqC,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,OAAAF,QAAA,CAAAG,MAAA,WACTC,eAAe,CAACV,MAAM,EAAEC,YAAY,EAAEE,OAAO,CAAC;QAAA;UAAA,MAE/C,IAAIQ,KAAK,mBAAAzB,MAAA,CAAmBjB,MAAM,CAAE,CAAC;QAAA;QAAA;UAAA,OAAAqC,QAAA,CAAAM,IAAA;MAAA;IAAA,GAAAb,OAAA;EAAA,CAElD;EAAA,OAAAN,aAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAEce,eAAeA,CAAAG,GAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,gBAAA,CAAAtB,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAqB,iBAAA;EAAAA,gBAAA,OAAApB,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAA9B,SAAAmB,SAA+BjB,MAAM,EAAEC,YAAY,EAAEE,OAAO;IAAA,OAAAN,YAAA,YAAAO,IAAA,UAAAc,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAZ,IAAA,GAAAY,SAAA,CAAAX,IAAA;QAAA;UAAAW,SAAA,CAAAX,IAAA;UAAA,OAClDR,MAAM,CAACoB,KAAK,oCAAAlC,MAAA,CAEEe,YAAY,YAAAf,MAAA,CAASiB,OAAO,uBAAoB,CAAC;QAAA;QAAA;UAAA,OAAAgB,SAAA,CAAAP,IAAA;MAAA;IAAA,GAAAK,QAAA;EAAA,CACxE;EAAA,OAAAD,gBAAA,CAAAtB,KAAA,OAAAC,SAAA;AAAA;AAAA,SAEqB0B,UAAUA,CAAAC,GAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;EAAA,OAAAC,WAAA,CAAArC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAoC,YAAA;EAAAA,WAAA,OAAAnC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAzB,SAAAkC,SAA0BhC,MAAM,EAAEE,KAAK,EAAE7B,MAAM,EAAE4B,YAAY,EAAEgC,cAAc,EAAEC,YAAY,EAAEC,aAAa,EAAEC,WAAW,EAAEnE,MAAM;IAAA,IAAAkC,OAAA;IAAA,OAAAN,YAAA,YAAAO,IAAA,UAAAiC,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA/B,IAAA,GAAA+B,SAAA,CAAA9B,IAAA;QAAA;UAC5HL,OAAO,eAAAjB,MAAA,CAAe+C,cAAc,cAAA/C,MAAA,CAAWnB,UAAU,CAACoE,aAAa,EAAElE,MAAM,CAAC,YAAAiB,MAAA,CAASgB,KAAK,OAAAhB,MAAA,CAAId,aAAa,CAACH,MAAM,EAAEI,MAAM,CAAC,WAAAa,MAAA,CAAQgD,YAAY,cAAAhD,MAAA,CAAWnB,UAAU,CAACqE,WAAW,EAAEnE,MAAM,CAAC;UAAA,MAC/LA,MAAM,KAAK,KAAK;YAAAqE,SAAA,CAAA9B,IAAA;YAAA;UAAA;UAAA,OAAA8B,SAAA,CAAA7B,MAAA,WACT8B,aAAa,CAACvC,MAAM,EAAEC,YAAY,EAAEE,OAAO,CAAC;QAAA;UAAA,MAE7C,IAAIQ,KAAK,mBAAAzB,MAAA,CAAmBjB,MAAM,CAAE,CAAC;QAAA;QAAA;UAAA,OAAAqE,SAAA,CAAA1B,IAAA;MAAA;IAAA,GAAAoB,QAAA;EAAA,CAElD;EAAA,OAAAD,WAAA,CAAArC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAEc4C,aAAaA,CAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;EAAA,OAAAC,cAAA,CAAAjD,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAgD,eAAA;EAAAA,cAAA,OAAA/C,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAA5B,SAAA8C,SAA6B5C,MAAM,EAAEC,YAAY,EAAEE,OAAO;IAAA,OAAAN,YAAA,YAAAO,IAAA,UAAAyC,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAvC,IAAA,GAAAuC,SAAA,CAAAtC,IAAA;QAAA;UAAAsC,SAAA,CAAAtC,IAAA;UAAA,OAChDR,MAAM,CAACoB,KAAK,oCAAAlC,MAAA,CAEEe,YAAY,YAAAf,MAAA,CAASiB,OAAO,uBAAoB,CAAC;QAAA;QAAA;UAAA,OAAA2C,SAAA,CAAAlC,IAAA;MAAA;IAAA,GAAAgC,QAAA;EAAA,CACxE;EAAA,OAAAD,cAAA,CAAAjD,KAAA,OAAAC,SAAA;AAAA"}