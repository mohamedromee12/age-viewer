{"version":3,"file":"queryList.js","names":["fs","require","promises","papa","path","readCSV","file","resolve","reject","parse","skipEmptyLines","transform","val","col","complete","results","error","err","getQueryList","_ref","_asyncToGenerator2","_regenerator","mark","_callee","req","res","next","p","kwResults","wrap","_callee$","_context","prev","join","__dirname","readFile","encoding","sent","Promise","kw","data","splice","relationships","slice","status","json","end","stop","_x","_x2","_x3","apply","arguments","module","exports"],"sources":["../../src/services/queryList.js"],"sourcesContent":["const fs = require('fs').promises;\nconst papa = require('papaparse');\nconst path = require('path');\n\n\nconst readCSV = (file, resolve, reject)=>{\n    return papa.parse(file, {\n        skipEmptyLines:true,\n        transform:(val, col)=>{\n            if (col !== 0) return val;\n\n        },\n        complete:(results)=>{\n            resolve(results);\n        },\n        error:(err)=>{\n            reject(err);\n        },\n    });\n}\nconst getQueryList = async (req, res, next)=>{\n    const p = path.join(__dirname, \"../../misc/graph_kw.csv\");\n    const file = await fs.readFile(p, {\n        encoding: 'utf-8'\n    });\n\n    const results = await new Promise((resolve, reject)=>{\n        readCSV(file, resolve, reject);\n    });\n\n    const kwResults = {\n        kw:results.data[0].splice(1),\n        relationships:results.data.slice(1)\n    }\n    res.status(200).json(kwResults).end();\n\n}\nmodule.exports = getQueryList;"],"mappings":";;;;;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC,CAACC,QAAQ;AACjC,IAAMC,IAAI,GAAGF,OAAO,CAAC,WAAW,CAAC;AACjC,IAAMG,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;AAG5B,IAAMI,OAAO,GAAG,SAAVA,OAAOA,CAAIC,IAAI,EAAEC,OAAO,EAAEC,MAAM,EAAG;EACrC,OAAOL,IAAI,CAACM,KAAK,CAACH,IAAI,EAAE;IACpBI,cAAc,EAAC,IAAI;IACnBC,SAAS,EAAC,SAAAA,UAACC,GAAG,EAAEC,GAAG,EAAG;MAClB,IAAIA,GAAG,KAAK,CAAC,EAAE,OAAOD,GAAG;IAE7B,CAAC;IACDE,QAAQ,EAAC,SAAAA,SAACC,OAAO,EAAG;MAChBR,OAAO,CAACQ,OAAO,CAAC;IACpB,CAAC;IACDC,KAAK,EAAC,SAAAA,MAACC,GAAG,EAAG;MACTT,MAAM,CAACS,GAAG,CAAC;IACf;EACJ,CAAC,CAAC;AACN,CAAC;AACD,IAAMC,YAAY;EAAA,IAAAC,IAAA,OAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAG,SAAAC,QAAOC,GAAG,EAAEC,GAAG,EAAEC,IAAI;IAAA,IAAAC,CAAA,EAAArB,IAAA,EAAAS,OAAA,EAAAa,SAAA;IAAA,OAAAP,YAAA,YAAAQ,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAL,IAAA;QAAA;UAChCC,CAAC,GAAGvB,IAAI,CAAC6B,IAAI,CAACC,SAAS,EAAE,yBAAyB,CAAC;UAAAH,QAAA,CAAAL,IAAA;UAAA,OACtC1B,EAAE,CAACmC,QAAQ,CAACR,CAAC,EAAE;YAC9BS,QAAQ,EAAE;UACd,CAAC,CAAC;QAAA;UAFI9B,IAAI,GAAAyB,QAAA,CAAAM,IAAA;UAAAN,QAAA,CAAAL,IAAA;UAAA,OAIY,IAAIY,OAAO,CAAC,UAAC/B,OAAO,EAAEC,MAAM,EAAG;YACjDH,OAAO,CAACC,IAAI,EAAEC,OAAO,EAAEC,MAAM,CAAC;UAClC,CAAC,CAAC;QAAA;UAFIO,OAAO,GAAAgB,QAAA,CAAAM,IAAA;UAIPT,SAAS,GAAG;YACdW,EAAE,EAACxB,OAAO,CAACyB,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC;YAC5BC,aAAa,EAAC3B,OAAO,CAACyB,IAAI,CAACG,KAAK,CAAC,CAAC;UACtC,CAAC;UACDlB,GAAG,CAACmB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACjB,SAAS,CAAC,CAACkB,GAAG,CAAC,CAAC;QAAC;QAAA;UAAA,OAAAf,QAAA,CAAAgB,IAAA;MAAA;IAAA,GAAAxB,OAAA;EAAA,CAEzC;EAAA,gBAhBKL,YAAYA,CAAA8B,EAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAA/B,IAAA,CAAAgC,KAAA,OAAAC,SAAA;EAAA;AAAA,GAgBjB;AACDC,MAAM,CAACC,OAAO,GAAGpC,YAAY"}