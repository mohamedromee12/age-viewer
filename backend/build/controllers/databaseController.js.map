{"version":3,"file":"databaseController.js","names":["sessionService","require","winston","DatabaseController","_classCallCheck2","_createClass2","key","value","_connectDatabase","_asyncToGenerator2","_regenerator","mark","_callee","req","res","next","databaseService","connectionInfo","wrap","_callee$","_context","prev","get","sessionID","isConnected","connectDatabase","body","getConnectionInfo","status","json","end","stop","_x","_x2","_x3","apply","arguments","_disconnectDatabase","_callee2","isDisconnect","_callee2$","_context2","disconnectDatabase","sent","msg","Error","_x4","_x5","_x6","_getStatus","_callee3","_callee3$","_context3","getConnectionStatus","getStatus","_x7","_x8","_x9","_getMetadata","_callee4","metadata","_callee4$","_context4","getMetaData","getMetadata","_x10","_x11","_x12","module","exports"],"sources":["../../src/controllers/databaseController.js"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nconst sessionService = require('../services/sessionService');\nconst winston = require('winston');\n\nclass DatabaseController {\n\n    async connectDatabase(req, res, next) {\n        let databaseService = sessionService.get(req.sessionID);\n        if (!databaseService.isConnected()) {\n            await databaseService.connectDatabase(req.body);\n        }\n        const connectionInfo = databaseService.getConnectionInfo();\n        res.status(200).json(connectionInfo).end();\n    }\n\n    async disconnectDatabase(req, res, next) {\n        let databaseService = sessionService.get(req.sessionID);\n        if (databaseService.isConnected()) {\n            let isDisconnect = await databaseService.disconnectDatabase();\n\n            if (isDisconnect) {\n                res.status(200).json({msg: 'Disconnect Successful'}).end();\n            } else {\n                res.status(500).json({msg: 'Already Disconnected'}).end();\n            }\n        } else {\n            throw new Error('Not connected');\n        }\n    }\n\n    async getStatus(req, res, next) {\n        let databaseService = sessionService.get(req.sessionID);\n        if (databaseService.isConnected()) {\n            await databaseService.getConnectionStatus();\n            res.status(200).json(databaseService.getConnectionInfo()).end();\n        } else {\n            throw new Error('Not connected');\n        }\n    }\n\n    async getMetadata(req, res, next) {\n        let databaseService = sessionService.get(req.sessionID);\n        if (databaseService.isConnected()) {\n            let metadata = await databaseService.getMetaData(req.body);\n            res.status(200).json(metadata).end();\n        } else {\n            throw new Error('Not connected');\n        }\n    }\n    /*\n    async getMetaChart(req, res, next) {\n        let databaseService = sessionService.get(req.sessionID);\n        if (databaseService.isConnected()) {\n            let metadata = [];\n            try {\n                let graphLabels = await databaseService.getGraphLabels();\n                for (let labels of graphLabels) {\n                    let countResults = await databaseService.getGraphLabelCount(labels.la_name, labels.la_kind)\n                    for (let idx in countResults) {\n                        if (idx > 0) {\n                            labels.la_name = labels.la_name + \"-\" + idx\n                            labels.la_oid = labels.la_oid + (idx * 0.1)\n                        }\n                        metadata.push(Object.assign({}, labels, countResults[idx]))\n                    }\n                }\n                res.status(200).json(metadata).end();\n            } catch (error) {\n                res.status(500).json(metadata).end();\n            }\n        } else {\n            throw new Error('Not connected');\n        }\n    }*/\n}\n\nmodule.exports = DatabaseController;\n"],"mappings":"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"}