{"version":3,"file":"cypherService.js","names":["CypherService","graphRepository","_classCallCheck2","_graphRepository","_createClass2","key","value","_executeCypher","_asyncToGenerator2","_regenerator","mark","_callee","query","resultSet","wrap","_callee$","_context","prev","next","Error","execute","sent","abrupt","createResult","t0","stop","executeCypher","_x","apply","arguments","result","targetItem","Array","isArray","pop","cypherRow","rows","columns","_getColumns","rowCount","_getRowCount","command","_getCommand","fields","map","field","name","_convertRowToResult","_this","row","convetedObject","k","typeName","constructor","convertPath","convertVertex","convertEdge","_ref","vertices","edges","start","end","len","idx","push","_ref2","label","id","props","concat","oid","properties","_ref3","module","exports"],"sources":["../../src/services/cypherService.js"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nclass CypherService {\n    constructor(graphRepository) {\n        this._graphRepository = graphRepository;\n    }\n\n    async executeCypher(query) {\n        if (!query) {\n            throw new Error('Query not entered!');\n        } else {\n            try {\n                let resultSet = await this._graphRepository.execute(query);\n                return this.createResult(resultSet);\n            } catch (err) {\n                throw err;\n            }\n        }\n    }\n    \n    createResult(resultSet) {\n        let result;\n\n        let targetItem = resultSet;\n        if (Array.isArray(resultSet)) {\n            targetItem = resultSet.pop();\n        }\n\n        let cypherRow = targetItem.rows;\n        result = {\n            rows: cypherRow,\n            columns: this._getColumns(targetItem),\n            rowCount: this._getRowCount(targetItem),\n            command: this._getCommand(targetItem),\n        };\n        return result;\n    }\n\n    _getColumns(resultSet) {\n        return resultSet.fields.map((field) => field.name);\n    }\n\n    _getRowCount(resultSet) {\n        return resultSet.rowCount;\n    }\n\n    _getCommand(resultSet) {\n        return resultSet.command;\n    }\n\n    _convertRowToResult(resultSet) {\n        return resultSet.rows.map((row) => {\n            let convetedObject = {};\n            for (let k in row) {\n                if (row[k]) {\n                    let typeName = row[k].constructor.name;\n                    if (typeName === 'Path') {\n                        convetedObject[k] = this.convertPath(row[k]);\n                    } else if (typeName === 'Vertex') {\n                        convetedObject[k] = this.convertVertex(row[k]);\n                    } else if (typeName === 'Edge') {\n                        convetedObject[k] = this.convertEdge(row[k]);\n                    } else {\n                        convetedObject[k] = row[k];\n                    }\n                } else {\n                    convetedObject[k] = null;\n                }\n            }\n            return convetedObject;\n        });\n    }\n\n    convertPath({vertices, edges, start, end, len}) {\n        let result = [];\n        // vertex\n        for (let idx in vertices) {\n            result.push(this.convertVertex(vertices[idx]));\n        }\n        // edge\n        for (let idx in edges) {\n            result.push(this.convertEdge(edges[idx]));\n        }\n\n        return result;\n    }\n\n    convertEdge({label, id, start, end, props}) {\n        return {\n            label: label,\n            id: `${id.oid}.${id.id}`,\n            start: `${start.oid}.${start.id}`,\n            end: `${end.oid}.${end.id}`,\n            properties: props,\n        };\n    }\n\n    convertVertex({label, id, props}) {\n        return {\n            label: label,\n            id: `${id.oid}.${id.id}`,\n            properties: props,\n        };\n    }\n}\n\nmodule.exports = CypherService;\n"],"mappings":"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"}