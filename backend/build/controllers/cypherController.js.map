{"version":3,"file":"cypherController.js","names":["CypherService","require","sessionService","GraphCreator","CypherController","_classCallCheck2","_createClass2","key","value","_executeCypher","_asyncToGenerator2","_regenerator","mark","_callee","req","res","connectorService","cypherService","data","wrap","_callee$","_context","prev","next","get","sessionID","isConnected","graphRepository","executeCypher","body","cmd","sent","status","json","end","Error","stop","_x","_x2","apply","arguments","_createGraph","_callee5","db","_yield$db$graphReposi","_yield$db$graphReposi2","client","transaction","graph","DROP","CREATE","details","err","_callee5$","_context5","createTransaction","_slicedToArray2","nodes","files","edges","graphName","dropGraph","parseData","query","drop","create","t0","code","Promise","all","labels","map","_ref","_callee2","q","_callee2$","_context2","abrupt","_x6","_ref2","_callee3","_callee3$","_context3","_x7","_ref3","_callee4","_callee4$","_context4","_x8","t1","toString","_objectSpread","release","finish","createGraph","_x3","_x4","_x5","module","exports"],"sources":["../../src/controllers/cypherController.js"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nconst CypherService = require(\"../services/cypherService\");\nconst sessionService = require(\"../services/sessionService\");\nconst GraphCreator = require(\"../models/GraphCreator\");\n\nclass CypherController {\n    async executeCypher(req, res) {\n        let connectorService = sessionService.get(req.sessionID);\n        if (connectorService.isConnected()) {\n            let cypherService = new CypherService(\n                connectorService.graphRepository\n            );\n            let data = await cypherService.executeCypher(req.body.cmd);\n            res.status(200).json(data).end();\n        } else {\n            throw new Error(\"Not connected\");\n        }\n    }\n\n    async createGraph(req, res, next) {\n        let db = sessionService.get(req.sessionID);\n        if (db.isConnected()){\n            let [client, transaction] = await db.graphRepository.createTransaction();\n            try {\n                let graph = new GraphCreator({\n                    nodes: req.files.nodes,\n                    edges: req.files.edges,\n                    graphName: req.body.graphName,\n                    dropGraph: req.body.dropGraph === 'true'\n                });\n                \n                await graph.parseData();\n                const DROP = graph.query.graph.drop;\n                const CREATE = graph.query.graph.create;\n                if (DROP){\n                    try{\n                       await client.query(DROP);\n                    }catch(e){\n                        if(e.code !== '3F000') throw e;\n                    }\n                    \n                }\n                await client.query(CREATE);\n                await transaction('BEGIN');\n                await Promise.all(graph.query.labels.map(async (q)=>{\n                    return await transaction(q);\n                }));\n                await Promise.all(graph.query.nodes.map(async (q)=>{\n                    return await transaction(q);\n                }));\n                await Promise.all(graph.query.edges.map(async (q)=>{\n                    return await transaction(q);\n                }));\n                await transaction('COMMIT');\n                res.status(204).end();\n            } catch (e){\n                await transaction('ROLLBACK');\n                const details = e.toString();\n                const err = {\n                    ...e,\n                    details\n                }\n                res.status(500).json(err).end();\n            }finally{\n                client.release();\n            }\n\n        }\n    }\n}\n\nmodule.exports = CypherController;\n"],"mappings":"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"}